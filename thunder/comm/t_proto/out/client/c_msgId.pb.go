// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: c_msgId.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// max msgID 4999
type C_MSG int32

const (
	C_MSG_ID_Heartbeat        C_MSG = 0
	C_MSG_ID_Kick_Ntf         C_MSG = 1
	C_MSG_ID_Err_Ntf          C_MSG = 2
	C_MSG_ID_Gm_Req           C_MSG = 3
	C_MSG_ID_Gm_Ack           C_MSG = 4
	C_MSG_ID_TestMsg          C_MSG = 999
	C_MSG_ID_Login_Req        C_MSG = 1001
	C_MSG_ID_Login_Ack        C_MSG = 1002
	C_MSG_ID_Verify_Req       C_MSG = 1003
	C_MSG_ID_Verify_Ack       C_MSG = 1004
	C_MSG_ID_Reconnect_Req    C_MSG = 1005
	C_MSG_ID_Reconnect_Ack    C_MSG = 1006
	C_MSG_ID_Enter_Req        C_MSG = 1007
	C_MSG_ID_Enter_Ntf        C_MSG = 1008
	C_MSG_ID_Move_Req         C_MSG = 1009
	C_MSG_ID_Move_Ack         C_MSG = 1010
	C_MSG_ID_OpenWall_Req     C_MSG = 1011
	C_MSG_ID_OpenWall_Ack     C_MSG = 1012
	C_MSG_ID_GetTreasure_Req  C_MSG = 1013
	C_MSG_ID_GetTreasure_Ack  C_MSG = 1014
	C_MSG_ID_OpenTreasure_Req C_MSG = 1015
	C_MSG_ID_OpenTreasure_Ack C_MSG = 1016
	C_MSG_ID_Revive_Req       C_MSG = 1017
	C_MSG_ID_Revive_Ack       C_MSG = 1018
	C_MSG_ID_ResetMap_Req     C_MSG = 1019
	C_MSG_ID_ResetMap_Ack     C_MSG = 1020
	C_MSG_ID_UpLv_Req         C_MSG = 1021
	C_MSG_ID_UpLv_Ack         C_MSG = 1022
	C_MSG_ID_Strength_Ntf     C_MSG = 1023
	C_MSG_ID_Income_Ntf       C_MSG = 1024
	C_MSG_ID_Diamond_Ntf      C_MSG = 1025
	C_MSG_ID_Card_Req         C_MSG = 1030
	C_MSG_ID_Card_Ack         C_MSG = 1031
	C_MSG_ID_Card_Ntf         C_MSG = 1032
	C_MSG_ID_CardUpLv_Req     C_MSG = 1033
	C_MSG_ID_CardUpLv_Ack     C_MSG = 1034
	C_MSG_ID_ShopBuy_Req      C_MSG = 1040
	C_MSG_ID_ShopBuy_Ack      C_MSG = 1041
	C_MSG_ID_Hasten_Req       C_MSG = 1051
	C_MSG_ID_Hasten_Ack       C_MSG = 1052
	C_MSG_ID_Invite_Req       C_MSG = 1061
	C_MSG_ID_Invite_Ack       C_MSG = 1062
	C_MSG_ID_InviteReward_Req C_MSG = 1063
	C_MSG_ID_InviteReward_Ack C_MSG = 1064
	C_MSG_ID_Invite_Ntf       C_MSG = 1065
	C_MSG_ID_RedPoint_Req     C_MSG = 1071
	C_MSG_ID_RedPoint_Ack     C_MSG = 1072
	C_MSG_ID_RedPoint_Ntf     C_MSG = 1073
	C_MSG_ID_Rank_Req         C_MSG = 1081
	C_MSG_ID_Rank_Ack         C_MSG = 1082
	C_MSG_ID_GuildList_Req    C_MSG = 1101
	C_MSG_ID_GuildList_Ack    C_MSG = 1102
	C_MSG_ID_GuildRank_Req    C_MSG = 1103
	C_MSG_ID_GuildRank_Ack    C_MSG = 1104
	C_MSG_ID_GuildJoin_Req    C_MSG = 1105
	C_MSG_ID_GuildJoin_Ack    C_MSG = 1106
	C_MSG_ID_GuildLeave_Req   C_MSG = 1107
	C_MSG_ID_GuildLeave_Ack   C_MSG = 1108
)

var C_MSG_name = map[int32]string{
	0:    "ID_Heartbeat",
	1:    "ID_Kick_Ntf",
	2:    "ID_Err_Ntf",
	3:    "ID_Gm_Req",
	4:    "ID_Gm_Ack",
	999:  "ID_TestMsg",
	1001: "ID_Login_Req",
	1002: "ID_Login_Ack",
	1003: "ID_Verify_Req",
	1004: "ID_Verify_Ack",
	1005: "ID_Reconnect_Req",
	1006: "ID_Reconnect_Ack",
	1007: "ID_Enter_Req",
	1008: "ID_Enter_Ntf",
	1009: "ID_Move_Req",
	1010: "ID_Move_Ack",
	1011: "ID_OpenWall_Req",
	1012: "ID_OpenWall_Ack",
	1013: "ID_GetTreasure_Req",
	1014: "ID_GetTreasure_Ack",
	1015: "ID_OpenTreasure_Req",
	1016: "ID_OpenTreasure_Ack",
	1017: "ID_Revive_Req",
	1018: "ID_Revive_Ack",
	1019: "ID_ResetMap_Req",
	1020: "ID_ResetMap_Ack",
	1021: "ID_UpLv_Req",
	1022: "ID_UpLv_Ack",
	1023: "ID_Strength_Ntf",
	1024: "ID_Income_Ntf",
	1025: "ID_Diamond_Ntf",
	1030: "ID_Card_Req",
	1031: "ID_Card_Ack",
	1032: "ID_Card_Ntf",
	1033: "ID_CardUpLv_Req",
	1034: "ID_CardUpLv_Ack",
	1040: "ID_ShopBuy_Req",
	1041: "ID_ShopBuy_Ack",
	1051: "ID_Hasten_Req",
	1052: "ID_Hasten_Ack",
	1061: "ID_Invite_Req",
	1062: "ID_Invite_Ack",
	1063: "ID_InviteReward_Req",
	1064: "ID_InviteReward_Ack",
	1065: "ID_Invite_Ntf",
	1071: "ID_RedPoint_Req",
	1072: "ID_RedPoint_Ack",
	1073: "ID_RedPoint_Ntf",
	1081: "ID_Rank_Req",
	1082: "ID_Rank_Ack",
	1101: "ID_GuildList_Req",
	1102: "ID_GuildList_Ack",
	1103: "ID_GuildRank_Req",
	1104: "ID_GuildRank_Ack",
	1105: "ID_GuildJoin_Req",
	1106: "ID_GuildJoin_Ack",
	1107: "ID_GuildLeave_Req",
	1108: "ID_GuildLeave_Ack",
}

var C_MSG_value = map[string]int32{
	"ID_Heartbeat":        0,
	"ID_Kick_Ntf":         1,
	"ID_Err_Ntf":          2,
	"ID_Gm_Req":           3,
	"ID_Gm_Ack":           4,
	"ID_TestMsg":          999,
	"ID_Login_Req":        1001,
	"ID_Login_Ack":        1002,
	"ID_Verify_Req":       1003,
	"ID_Verify_Ack":       1004,
	"ID_Reconnect_Req":    1005,
	"ID_Reconnect_Ack":    1006,
	"ID_Enter_Req":        1007,
	"ID_Enter_Ntf":        1008,
	"ID_Move_Req":         1009,
	"ID_Move_Ack":         1010,
	"ID_OpenWall_Req":     1011,
	"ID_OpenWall_Ack":     1012,
	"ID_GetTreasure_Req":  1013,
	"ID_GetTreasure_Ack":  1014,
	"ID_OpenTreasure_Req": 1015,
	"ID_OpenTreasure_Ack": 1016,
	"ID_Revive_Req":       1017,
	"ID_Revive_Ack":       1018,
	"ID_ResetMap_Req":     1019,
	"ID_ResetMap_Ack":     1020,
	"ID_UpLv_Req":         1021,
	"ID_UpLv_Ack":         1022,
	"ID_Strength_Ntf":     1023,
	"ID_Income_Ntf":       1024,
	"ID_Diamond_Ntf":      1025,
	"ID_Card_Req":         1030,
	"ID_Card_Ack":         1031,
	"ID_Card_Ntf":         1032,
	"ID_CardUpLv_Req":     1033,
	"ID_CardUpLv_Ack":     1034,
	"ID_ShopBuy_Req":      1040,
	"ID_ShopBuy_Ack":      1041,
	"ID_Hasten_Req":       1051,
	"ID_Hasten_Ack":       1052,
	"ID_Invite_Req":       1061,
	"ID_Invite_Ack":       1062,
	"ID_InviteReward_Req": 1063,
	"ID_InviteReward_Ack": 1064,
	"ID_Invite_Ntf":       1065,
	"ID_RedPoint_Req":     1071,
	"ID_RedPoint_Ack":     1072,
	"ID_RedPoint_Ntf":     1073,
	"ID_Rank_Req":         1081,
	"ID_Rank_Ack":         1082,
	"ID_GuildList_Req":    1101,
	"ID_GuildList_Ack":    1102,
	"ID_GuildRank_Req":    1103,
	"ID_GuildRank_Ack":    1104,
	"ID_GuildJoin_Req":    1105,
	"ID_GuildJoin_Ack":    1106,
	"ID_GuildLeave_Req":   1107,
	"ID_GuildLeave_Ack":   1108,
}

func (x C_MSG) String() string {
	return proto.EnumName(C_MSG_name, int32(x))
}

func (C_MSG) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf95f1541cee4b7d, []int{0}
}

func init() {
	proto.RegisterEnum("C_MSG", C_MSG_name, C_MSG_value)
}

func init() { proto.RegisterFile("c_msgId.proto", fileDescriptor_cf95f1541cee4b7d) }

var fileDescriptor_cf95f1541cee4b7d = []byte{
	// 590 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0x39, 0x73, 0xd3, 0x40,
	0x14, 0xc7, 0xe3, 0x70, 0x48, 0x59, 0x70, 0xac, 0x6c, 0xc2, 0x51, 0xf9, 0x03, 0x50, 0xd0, 0xf0,
	0x09, 0x48, 0x94, 0x71, 0x04, 0x36, 0x30, 0x72, 0x80, 0x19, 0x9a, 0x1d, 0x59, 0x7e, 0x71, 0x34,
	0xb6, 0x25, 0xb1, 0x5a, 0x9b, 0xa1, 0x83, 0x86, 0xab, 0x82, 0x8e, 0x19, 0x68, 0xb9, 0x2a, 0xa0,
	0x84, 0xe1, 0x03, 0xd0, 0x00, 0xe1, 0xf8, 0x00, 0x8c, 0x29, 0x18, 0xee, 0xfb, 0x3e, 0xe7, 0xad,
	0x24, 0x67, 0x56, 0x72, 0xa9, 0xdf, 0xfe, 0xfe, 0xef, 0xed, 0x5b, 0xad, 0x44, 0x8a, 0x2e, 0xeb,
	0x46, 0x2d, 0xab, 0xb9, 0x3d, 0xe4, 0x81, 0x08, 0xb6, 0xdd, 0x99, 0x20, 0xeb, 0xe6, 0x58, 0xad,
	0x5e, 0xa1, 0x06, 0xd9, 0x68, 0x99, 0x6c, 0x01, 0x1c, 0x2e, 0x1a, 0xe0, 0x08, 0x63, 0x8c, 0x96,
	0xc8, 0x06, 0xcb, 0x64, 0xbb, 0x3d, 0xb7, 0xcd, 0xf6, 0x88, 0x25, 0xa3, 0x40, 0x27, 0x09, 0xb1,
	0x4c, 0x36, 0xcf, 0xb9, 0x7c, 0x1e, 0xa7, 0x45, 0x32, 0x61, 0x99, 0xac, 0xd2, 0x65, 0x36, 0x1c,
	0x36, 0xd6, 0xac, 0x3e, 0xee, 0x74, 0xdb, 0xc6, 0x5a, 0x5a, 0x92, 0xf6, 0x22, 0x44, 0xa2, 0x16,
	0xb5, 0x8c, 0xe7, 0x1a, 0x9d, 0x92, 0x1d, 0xaa, 0x41, 0xcb, 0xf3, 0x65, 0xe2, 0x85, 0x8a, 0x30,
	0xf5, 0x52, 0xa3, 0x94, 0x14, 0x2d, 0x93, 0x1d, 0x00, 0xee, 0x2d, 0x1d, 0x95, 0xda, 0xab, 0x0c,
	0x43, 0xef, 0xb5, 0x46, 0x37, 0x11, 0xc3, 0x32, 0x99, 0x0d, 0x6e, 0xe0, 0xfb, 0xe0, 0x0a, 0xa9,
	0xbe, 0xc9, 0x63, 0xb4, 0xdf, 0xa6, 0x8d, 0xe6, 0x7d, 0x01, 0x5c, 0x9a, 0xef, 0x54, 0x84, 0xf3,
	0xbc, 0xd7, 0xa8, 0x21, 0x27, 0xae, 0x05, 0x7d, 0x90, 0xd2, 0x07, 0x85, 0x60, 0xa5, 0x8f, 0x1a,
	0x9d, 0x21, 0x25, 0xcb, 0x64, 0x7b, 0x43, 0xf0, 0x0f, 0x3a, 0x9d, 0x8e, 0xf4, 0x3e, 0xe5, 0x28,
	0xba, 0x9f, 0x35, 0xba, 0x85, 0x50, 0x3c, 0x11, 0x10, 0x8b, 0x1c, 0x9c, 0xa8, 0xc7, 0xe3, 0xb2,
	0x5f, 0x46, 0x2d, 0x60, 0xe2, 0xab, 0x46, 0xb7, 0x92, 0xe9, 0xa4, 0x8e, 0x12, 0xf9, 0x36, 0x72,
	0x05, 0x33, 0xdf, 0xd3, 0xd3, 0xb1, 0xa1, 0xef, 0x25, 0xfb, 0xfe, 0x91, 0x61, 0xe8, 0xfd, 0x4c,
	0xf7, 0x68, 0x43, 0x04, 0xa2, 0xe6, 0x84, 0xd2, 0xfc, 0x95, 0xa3, 0xe8, 0xfe, 0x4e, 0xe7, 0xde,
	0x1f, 0x56, 0xfb, 0xd2, 0xfb, 0xa3, 0x10, 0x74, 0xfe, 0xa6, 0xc9, 0xba, 0xe0, 0xe0, 0xb7, 0xc4,
	0xb2, 0x3c, 0xc3, 0x7f, 0x69, 0x67, 0xcb, 0x77, 0x83, 0x2e, 0x48, 0x76, 0x4c, 0xa7, 0xd3, 0x64,
	0xd2, 0x32, 0x99, 0xe9, 0x39, 0xdd, 0xc0, 0x6f, 0x4a, 0x78, 0x5c, 0x4f, 0x0a, 0xce, 0x39, 0xbc,
	0x29, 0x5b, 0x9c, 0x50, 0x08, 0xb6, 0x38, 0xa9, 0x10, 0x4c, 0x9d, 0xd2, 0x93, 0xa6, 0x48, 0x86,
	0x9b, 0x3b, 0x9d, 0xa3, 0x98, 0x3e, 0x93, 0xb6, 0xad, 0x2f, 0x07, 0xe1, 0x6c, 0x2f, 0xbe, 0x4b,
	0x67, 0xb3, 0x10, 0xcd, 0x73, 0x7a, 0xb2, 0xe9, 0x05, 0x27, 0x12, 0x10, 0xdf, 0xcd, 0x0b, 0x19,
	0x86, 0xde, 0x45, 0x7d, 0x38, 0x5c, 0xdf, 0x13, 0xf1, 0x51, 0x5f, 0xca, 0x30, 0xf4, 0x2e, 0xeb,
	0xc9, 0xcb, 0x8a, 0x99, 0x0d, 0x47, 0xd2, 0x19, 0xaf, 0x8c, 0x5c, 0xc1, 0xcc, 0xd5, 0x4c, 0x1d,
	0x9c, 0xf6, 0x9a, 0x3e, 0x7c, 0x39, 0xcd, 0x7d, 0x81, 0xe7, 0xc7, 0x77, 0xfc, 0x7a, 0x8e, 0x62,
	0xfe, 0x46, 0x8e, 0x62, 0x85, 0x9b, 0xe9, 0x09, 0xda, 0x8e, 0xdf, 0x96, 0xe9, 0x5b, 0x0a, 0xc1,
	0xe4, 0x6d, 0x3d, 0xf9, 0x66, 0x2a, 0x3d, 0xaf, 0xd3, 0xac, 0x7a, 0x51, 0xdc, 0xe6, 0x5e, 0x1e,
	0xa3, 0x7d, 0x5f, 0xc1, 0xc3, 0xb2, 0x0f, 0xf2, 0x18, 0xed, 0x15, 0x05, 0xef, 0x0a, 0x92, 0x0f,
	0xff, 0x61, 0x1e, 0xa3, 0xfd, 0x48, 0xa7, 0x9b, 0xc9, 0xd4, 0xb0, 0x25, 0x38, 0xc9, 0x75, 0x7e,
	0x3c, 0x82, 0xa3, 0xff, 0x44, 0x9f, 0x9d, 0xb9, 0x3b, 0x28, 0x17, 0x56, 0x06, 0xe5, 0xc2, 0xd3,
	0x41, 0xb9, 0x70, 0xfe, 0x59, 0x79, 0xec, 0xd0, 0x78, 0xd8, 0x68, 0xac, 0x97, 0xff, 0xb6, 0x1d,
	0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x1d, 0xe8, 0x23, 0xec, 0x04, 0x00, 0x00,
}
